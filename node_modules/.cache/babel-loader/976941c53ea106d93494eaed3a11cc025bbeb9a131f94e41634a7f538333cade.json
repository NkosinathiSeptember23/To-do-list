{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CAPACITI-JHB\\\\Desktop\\\\to-do\\\\To-do-list\\\\src\\\\components\\\\TodoWrapper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { v4 as uuidv4 } from 'uuid';\nimport Todo from './Todo';\nimport EditTodoForm from './EditTodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuuidv4();\nconst TodoWrapper = () => {\n  _s();\n  // State to manage the list of todos\n  const [todos, setTodos] = useState([]);\n\n  // Function to add a new todo\n  const addTodo = todo => {\n    setTodos([...todos, {\n      id: uuidv4(),\n      task: todo,\n      completed: false,\n      isEditing: false\n    }]);\n    console.log(todos);\n  };\n\n  // Function to toggle the completed status of a todo by its ID\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n\n  // Function to delete a todo by its ID\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  // Function to toggle the editing mode for a todo by its ID\n  const editTodo = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n\n  // Function to update the task description of a todo in editing mode\n  const editTask = (task, id) => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      task,\n      isEditing: !todo.isEditing\n    } : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do-List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), todos.map((todo, index) => todo.isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n      editTodo: editTask,\n      task: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Todo, {\n      task: todo,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo,\n      editTodo: editTodo\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoWrapper, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = TodoWrapper;\nexport default TodoWrapper;\nvar _c;\n$RefreshReg$(_c, \"TodoWrapper\");","map":{"version":3,"names":["React","useState","TodoForm","v4","uuidv4","Todo","EditTodoForm","jsxDEV","_jsxDEV","TodoWrapper","_s","todos","setTodos","addTodo","todo","id","task","completed","isEditing","console","log","toggleComplete","map","deleteTodo","filter","editTodo","editTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["C:/Users/CAPACITI-JHB/Desktop/to-do/To-do-list/src/components/TodoWrapper.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Todo from './Todo'\r\nimport EditTodoForm from './EditTodoForm';\r\nuuidv4();\r\n\r\nconst TodoWrapper = () => {\r\n  // State to manage the list of todos\r\n  const [todos, setTodos] = useState([])\r\n\r\n  // Function to add a new todo\r\n  const addTodo = todo => {\r\n    setTodos([...todos, {id: uuidv4(), task: todo, completed: false, isEditing: false}])\r\n    console.log(todos)\r\n  }\r\n\r\n  // Function to toggle the completed status of a todo by its ID\r\n  const toggleComplete = (id) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo))\r\n    }\r\n  \r\n  // Function to delete a todo by its ID\r\n  const deleteTodo = id => {\r\n    setTodos(todos.filter(todo => todo.id !== id))\r\n  }\r\n\r\n  // Function to toggle the editing mode for a todo by its ID\r\n  const editTodo = id => {\r\n    setTodos(todos.map(todo => todo.id === id ? {...todo, isEditing: !todo.isEditing} : todo))\r\n  }\r\n\r\n  // Function to update the task description of a todo in editing mode\r\n  const editTask = (task, id) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\r\n      ))\r\n    }\r\n  return (\r\n    <div className='TodoWrapper'>\r\n\r\n      <h1>To-Do-List</h1>\r\n       {/* Render the form for adding new todos and pass addTodo function as prop */}\r\n      <TodoForm addTodo={addTodo}/>\r\n\r\n      {/* Map over todos array and render each todo item */}\r\n      {todos.map((todo, index) =>(\r\n        todo.isEditing ? (\r\n          <EditTodoForm editTodo={editTask} task={todo}/>\r\n        ): (\r\n        <Todo task={todo} key={index}\r\n         toggleComplete={toggleComplete}\r\n         deleteTodo={deleteTodo}\r\n         editTodo={editTodo}/>\r\n        )\r\n         \r\n      ))}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoWrapper\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}